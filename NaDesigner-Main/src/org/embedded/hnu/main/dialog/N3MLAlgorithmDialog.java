/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.embedded.hnu.main.dialog;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.xml.ws.Action;
import org.embedded.hnu.generator.ai.HSNNN3MLGenerator;
import org.embedded.hnu.ioconfig.ai.HN3MLIOConfig;
import org.openide.filesystems.FileUtil;

/**
 *
 * @author SeoyeonKim 2021.06.09
 */
public class N3MLAlgorithmDialog extends javax.swing.JDialog {

    public static final int H_N3ML_NM_CUBA_LIF_MODEL = 0; //*------- SeoyeonKim 2021.06.01 -------*
    public static final int H_N3ML_NM_COBA_LIF_MODEL = 1;
    public static final int H_N3ML_NM_IF_MODEL = 2;
    public static final int H_N3ML_NM_SRM_MODEL = 3;
    
    public static final int H_N3ML_A_softLIF = 0;
    public static final int H_N3ML_A_SpikeProp = 1;
    public static final int H_N3ML_A_STDP = 2;
    public static final int H_N3ML_A_BP_STDP = 3;
    public static final int H_N3ML_A_STBP = 4;
    
    public static final int H_SNN = 1;
    
    public static final int H_DATA_SET_TRAINING = 0;   
    public static final int H_DATA_SET_TEST = 1; 
    
    private int hN3mlNeuronModel = 0;  //*------- SeoyeonKim 2021.06.01 -------*
    private int hN3mlAlgorithm = 0;
    
    private int hDataSetOpt = H_DATA_SET_TEST;
    
    private HN3MLIOConfig hN3mlIOConf;
    private HSNNN3MLGenerator hN3mlGen;
    
    public static boolean LOADDATA = false;    
    public static boolean LOADLIB = false;  
    
    public static File libDir = new File(""); 
    public static File srcDir = new File("");  
    public static File srcFile = new File("");  
    public static File destDir = new File(""); 
    public static File destLib = new File("");  
    
    private String hDirectory="";
    
    private JFileChooser fileChooser = new JFileChooser();
    
    /**
     * Creates new form N3MLAlgorithmDialog
     */
    public N3MLAlgorithmDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myInitComponents();
    }
    
    public N3MLAlgorithmDialog(java.awt.Frame parent, boolean modal, HSNNN3MLGenerator n3mlgen, HN3MLIOConfig n3mlIO, int neuronmodel, int algorithm, int dataopt, String hDir) {
        super(parent, modal);
        hN3mlNeuronModel = neuronmodel;
        hN3mlAlgorithm = algorithm;
        hDataSetOpt = dataopt;
        hN3mlGen = n3mlgen;
        hN3mlIOConf = n3mlIO;
        hDirectory = hDir;
        initComponents();
        myInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resumeAlgorithmPanel = new javax.swing.JPanel();
        numOfClassesLabel = new javax.swing.JLabel();
        batchSizeLabel = new javax.swing.JLabel();
        simTimesLabel = new javax.swing.JLabel();
        stepsTimeLabel = new javax.swing.JLabel();
        frameTimeLabel = new javax.swing.JLabel();
        learningRateLabel = new javax.swing.JLabel();
        numOfClassesTextField = new javax.swing.JTextField();
        batchSizeTextField = new javax.swing.JTextField();
        simTimesTextField = new javax.swing.JTextField();
        stepsTimeTextField = new javax.swing.JTextField();
        frameTimeTextField = new javax.swing.JTextField();
        learningRateTextField = new javax.swing.JTextField();
        algorithmInfoPanel = new javax.swing.JPanel();
        currentAlgorithmLabel = new javax.swing.JLabel();
        printAlgorithmLabel = new javax.swing.JLabel();
        loadDataPanel = new javax.swing.JPanel();
        dataDirLabel = new javax.swing.JLabel();
        dataDirTextField = new javax.swing.JTextField();
        dataDirBrowseButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        generateButton = new javax.swing.JButton();
        logPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        varificationLogTextArea1 = new javax.swing.JTextArea();
        softLIFAlgorithmPanel = new javax.swing.JPanel();
        batchSizeLabel1 = new javax.swing.JLabel();
        momentumLabel = new javax.swing.JLabel();
        learningRateLabel1 = new javax.swing.JLabel();
        batchSizeTextField1 = new javax.swing.JTextField();
        momentumTextField = new javax.swing.JTextField();
        learningRateTextField1 = new javax.swing.JTextField();
        numOfEpochsLabel = new javax.swing.JLabel();
        numOfEpochsTextField = new javax.swing.JTextField();
        spikePropAlgorithmPanel = new javax.swing.JPanel();
        numOfClassesLabel3 = new javax.swing.JLabel();
        batchSizeLabel2 = new javax.swing.JLabel();
        numOfEpochsLabel2 = new javax.swing.JLabel();
        dtTimeLabel = new javax.swing.JLabel();
        numOfStepsLabel = new javax.swing.JLabel();
        maxFiringTimeLabel = new javax.swing.JLabel();
        numOfClassesTextField3 = new javax.swing.JTextField();
        batchSizeTextField2 = new javax.swing.JTextField();
        numOfEpochsTextField2 = new javax.swing.JTextField();
        dtTimeTextField = new javax.swing.JTextField();
        numOfStepsTextField = new javax.swing.JTextField();
        maxFiringTimeTextField = new javax.swing.JTextField();
        notFiringLabel = new javax.swing.JLabel();
        notFiringTextField = new javax.swing.JTextField();
        softLIFNeuronModelPanel = new javax.swing.JPanel();
        numOfClassesLabel1 = new javax.swing.JLabel();
        numOfClassesTextField1 = new javax.swing.JTextField();
        amplitudeLabel = new javax.swing.JLabel();
        amplitudeTextField = new javax.swing.JTextField();
        tauRefLabel = new javax.swing.JLabel();
        tauRefTextField = new javax.swing.JTextField();
        tauRCLabel = new javax.swing.JLabel();
        tauRCTextField = new javax.swing.JTextField();
        sigmaTextField = new javax.swing.JTextField();
        sigmaLabel = new javax.swing.JLabel();
        gainTextField = new javax.swing.JTextField();
        gainLabel = new javax.swing.JLabel();
        stdpAlgorithmPanel = new javax.swing.JPanel();
        numOfEpochsLabel3 = new javax.swing.JLabel();
        stepsTimeLabel2 = new javax.swing.JLabel();
        timeIntervalLabel = new javax.swing.JLabel();
        numOfEpochsTextField3 = new javax.swing.JTextField();
        stepsTimeTextField2 = new javax.swing.JTextField();
        timeIntervalTextField = new javax.swing.JTextField();
        batchSizeLabel3 = new javax.swing.JLabel();
        batchSizeTextField3 = new javax.swing.JTextField();
        bpStdpAlgorithmPanel = new javax.swing.JPanel();
        numOfClassesLabel4 = new javax.swing.JLabel();
        batchSizeLabel4 = new javax.swing.JLabel();
        numOfEpochsLabel4 = new javax.swing.JLabel();
        timeIntervalLabel2 = new javax.swing.JLabel();
        hiddenNeuronLabel = new javax.swing.JLabel();
        betaLabel = new javax.swing.JLabel();
        numOfClassesTextField4 = new javax.swing.JTextField();
        batchSizeTextField4 = new javax.swing.JTextField();
        numOfEpochsTextField4 = new javax.swing.JTextField();
        timeIntervalTextField2 = new javax.swing.JTextField();
        hiddenNeuronTextField = new javax.swing.JTextField();
        betaTextField = new javax.swing.JTextField();
        epsilonLabel = new javax.swing.JLabel();
        epsilonTextField = new javax.swing.JTextField();
        learningRateLabel2 = new javax.swing.JLabel();
        learningRateTextField2 = new javax.swing.JTextField();
        stbpAlgorithmPanel = new javax.swing.JPanel();
        numOfClassesLabel2 = new javax.swing.JLabel();
        batchSizeLabel5 = new javax.swing.JLabel();
        numOfEpochsLabel5 = new javax.swing.JLabel();
        timeIntervalLabel3 = new javax.swing.JLabel();
        numOfWorkersLabel = new javax.swing.JLabel();
        learningRateLabel3 = new javax.swing.JLabel();
        numOfClassesTextField2 = new javax.swing.JTextField();
        batchSizeTextField5 = new javax.swing.JTextField();
        numOfEpochsTextField5 = new javax.swing.JTextField();
        timeIntervalTextField3 = new javax.swing.JTextField();
        numOfWorkersTextField = new javax.swing.JTextField();
        learningRateTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.title")); // NOI18N
        setModal(true);
        setPreferredSize(new java.awt.Dimension(495, 480));

        resumeAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.resumeAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfClassesLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(simTimesLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.simTimesLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(stepsTimeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stepsTimeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(frameTimeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.frameTimeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(learningRateLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateLabel.text")); // NOI18N

        numOfClassesTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesTextField.text")); // NOI18N

        batchSizeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField.text")); // NOI18N

        simTimesTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.simTimesTextField.text")); // NOI18N

        stepsTimeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stepsTimeTextField.text")); // NOI18N
        stepsTimeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepsTimeTextFieldActionPerformed(evt);
            }
        });

        frameTimeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.frameTimeTextField.text")); // NOI18N

        learningRateTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateTextField.text")); // NOI18N

        javax.swing.GroupLayout resumeAlgorithmPanelLayout = new javax.swing.GroupLayout(resumeAlgorithmPanel);
        resumeAlgorithmPanel.setLayout(resumeAlgorithmPanelLayout);
        resumeAlgorithmPanelLayout.setHorizontalGroup(
            resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resumeAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resumeAlgorithmPanelLayout.createSequentialGroup()
                        .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numOfClassesLabel)
                            .addComponent(simTimesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(resumeAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(frameTimeLabel)
                        .addGap(65, 65, 65)))
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(frameTimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(simTimesTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfClassesTextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stepsTimeLabel)
                    .addComponent(batchSizeLabel)
                    .addComponent(learningRateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(batchSizeTextField)
                    .addComponent(stepsTimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(learningRateTextField))
                .addContainerGap())
        );
        resumeAlgorithmPanelLayout.setVerticalGroup(
            resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resumeAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfClassesLabel)
                    .addComponent(numOfClassesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeLabel))
                .addGap(18, 18, 18)
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simTimesLabel)
                    .addComponent(simTimesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepsTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepsTimeLabel))
                .addGap(18, 18, 18)
                .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(learningRateLabel)
                        .addComponent(learningRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resumeAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(frameTimeLabel)
                        .addComponent(frameTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        algorithmInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.algorithmInfoPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(currentAlgorithmLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.currentAlgorithmLabel.text")); // NOI18N

        printAlgorithmLabel.setForeground(new java.awt.Color(102, 102, 102));
        org.openide.awt.Mnemonics.setLocalizedText(printAlgorithmLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.printAlgorithmLabel.text")); // NOI18N

        javax.swing.GroupLayout algorithmInfoPanelLayout = new javax.swing.GroupLayout(algorithmInfoPanel);
        algorithmInfoPanel.setLayout(algorithmInfoPanelLayout);
        algorithmInfoPanelLayout.setHorizontalGroup(
            algorithmInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentAlgorithmLabel)
                .addGap(43, 43, 43)
                .addComponent(printAlgorithmLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        algorithmInfoPanelLayout.setVerticalGroup(
            algorithmInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(algorithmInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentAlgorithmLabel)
                    .addComponent(printAlgorithmLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loadDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.loadDataPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(dataDirLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.dataDirLabel.text")); // NOI18N

        dataDirTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.dataDirTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(dataDirBrowseButton, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.dataDirBrowseButton.text")); // NOI18N
        dataDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataDirBrowseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loadDataPanelLayout = new javax.swing.GroupLayout(loadDataPanel);
        loadDataPanel.setLayout(loadDataPanelLayout);
        loadDataPanelLayout.setHorizontalGroup(
            loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataDirLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataDirTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataDirBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        loadDataPanelLayout.setVerticalGroup(
            loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataDirLabel)
                    .addComponent(dataDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataDirBrowseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(generateButton, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.generateButton.text")); // NOI18N
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        logPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.logPanel1.border.title"))); // NOI18N
        logPanel1.setMaximumSize(new java.awt.Dimension(32767, 100));
        logPanel1.setPreferredSize(new java.awt.Dimension(192, 18));

        jScrollPane2.setEnabled(false);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(32767, 150));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(144, 24));
        jScrollPane2.setWheelScrollingEnabled(false);

        varificationLogTextArea1.setEditable(false);
        varificationLogTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        varificationLogTextArea1.setColumns(20);
        varificationLogTextArea1.setRows(3);
        varificationLogTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        varificationLogTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        varificationLogTextArea1.setEnabled(false);
        varificationLogTextArea1.setMaximumSize(new java.awt.Dimension(2147483647, 150));
        varificationLogTextArea1.setMinimumSize(new java.awt.Dimension(164, 15));
        varificationLogTextArea1.setPreferredSize(new java.awt.Dimension(142, 15));
        jScrollPane2.setViewportView(varificationLogTextArea1);

        javax.swing.GroupLayout logPanel1Layout = new javax.swing.GroupLayout(logPanel1);
        logPanel1.setLayout(logPanel1Layout);
        logPanel1Layout.setHorizontalGroup(
            logPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addContainerGap())
        );
        logPanel1Layout.setVerticalGroup(
            logPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        softLIFAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.softLIFAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel1, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(momentumLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.momentumLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(learningRateLabel1, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateLabel1.text")); // NOI18N

        batchSizeTextField1.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField1.text")); // NOI18N

        momentumTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.momentumTextField.text")); // NOI18N

        learningRateTextField1.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfEpochsLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel.text")); // NOI18N

        numOfEpochsTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsTextField.text")); // NOI18N

        javax.swing.GroupLayout softLIFAlgorithmPanelLayout = new javax.swing.GroupLayout(softLIFAlgorithmPanel);
        softLIFAlgorithmPanel.setLayout(softLIFAlgorithmPanelLayout);
        softLIFAlgorithmPanelLayout.setHorizontalGroup(
            softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLIFAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, softLIFAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(batchSizeLabel1)
                        .addGap(80, 80, 80))
                    .addGroup(softLIFAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(numOfEpochsLabel)
                        .addGap(9, 9, 9)))
                .addGroup(softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(numOfEpochsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(batchSizeTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(softLIFAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(learningRateLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(learningRateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(softLIFAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(momentumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(momentumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        softLIFAlgorithmPanelLayout.setVerticalGroup(
            softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLIFAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfEpochsLabel)
                    .addComponent(numOfEpochsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(momentumLabel)
                    .addComponent(momentumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(softLIFAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batchSizeLabel1)
                    .addComponent(batchSizeTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(learningRateLabel1)
                    .addComponent(learningRateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spikePropAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.spikePropAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfClassesLabel3, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfEpochsLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(dtTimeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.dtTimeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfStepsLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfStepsLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(maxFiringTimeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.maxFiringTimeLabel.text")); // NOI18N

        numOfClassesTextField3.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesTextField3.text")); // NOI18N

        batchSizeTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField2.text")); // NOI18N

        numOfEpochsTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsTextField2.text")); // NOI18N

        dtTimeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.dtTimeTextField.text")); // NOI18N
        dtTimeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtTimeTextFieldActionPerformed(evt);
            }
        });

        numOfStepsTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfStepsTextField.text")); // NOI18N

        maxFiringTimeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.maxFiringTimeTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(notFiringLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.notFiringLabel.text")); // NOI18N

        notFiringTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.notFiringTextField.text")); // NOI18N

        javax.swing.GroupLayout spikePropAlgorithmPanelLayout = new javax.swing.GroupLayout(spikePropAlgorithmPanel);
        spikePropAlgorithmPanel.setLayout(spikePropAlgorithmPanelLayout);
        spikePropAlgorithmPanelLayout.setHorizontalGroup(
            spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spikePropAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numOfClassesLabel3)
                            .addComponent(numOfEpochsLabel2))
                        .addComponent(numOfStepsLabel))
                    .addComponent(notFiringLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(numOfStepsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(numOfEpochsTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfClassesTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notFiringTextField))
                .addGap(18, 18, 18)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtTimeLabel)
                    .addComponent(batchSizeLabel2)
                    .addComponent(maxFiringTimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(batchSizeTextField2)
                    .addComponent(dtTimeTextField)
                    .addComponent(maxFiringTimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                .addContainerGap())
        );
        spikePropAlgorithmPanelLayout.setVerticalGroup(
            spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spikePropAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfClassesLabel3)
                    .addComponent(numOfClassesTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeLabel2))
                .addGap(18, 18, 18)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfEpochsLabel2)
                    .addComponent(numOfEpochsTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtTimeLabel))
                .addGap(18, 18, 18)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxFiringTimeLabel)
                        .addComponent(maxFiringTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numOfStepsLabel)
                        .addComponent(numOfStepsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(spikePropAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notFiringLabel)
                    .addComponent(notFiringTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        softLIFNeuronModelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.softLIFNeuronModelPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfClassesLabel1, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesLabel1.text")); // NOI18N

        numOfClassesTextField1.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(amplitudeLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.amplitudeLabel.text")); // NOI18N

        amplitudeTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.amplitudeTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(tauRefLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.tauRefLabel.text")); // NOI18N

        tauRefTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.tauRefTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(tauRCLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.tauRCLabel.text")); // NOI18N

        tauRCTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.tauRCTextField.text")); // NOI18N

        sigmaTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.sigmaTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(sigmaLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.sigmaLabel.text")); // NOI18N

        gainTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.gainTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(gainLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.gainLabel.text")); // NOI18N

        javax.swing.GroupLayout softLIFNeuronModelPanelLayout = new javax.swing.GroupLayout(softLIFNeuronModelPanel);
        softLIFNeuronModelPanel.setLayout(softLIFNeuronModelPanelLayout);
        softLIFNeuronModelPanelLayout.setHorizontalGroup(
            softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLIFNeuronModelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfClassesLabel1)
                    .addComponent(tauRefLabel)
                    .addComponent(gainLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tauRefTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gainTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(numOfClassesTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amplitudeLabel)
                    .addComponent(tauRCLabel)
                    .addComponent(sigmaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, softLIFNeuronModelPanelLayout.createSequentialGroup()
                        .addComponent(amplitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, softLIFNeuronModelPanelLayout.createSequentialGroup()
                        .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sigmaTextField)
                            .addComponent(tauRCTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        softLIFNeuronModelPanelLayout.setVerticalGroup(
            softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLIFNeuronModelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfClassesLabel1)
                    .addComponent(numOfClassesTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amplitudeLabel)
                    .addComponent(amplitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tauRefLabel)
                    .addComponent(tauRefTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tauRCLabel)
                    .addComponent(tauRCTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(softLIFNeuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gainLabel)
                    .addComponent(gainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sigmaLabel)
                    .addComponent(sigmaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stdpAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stdpAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfEpochsLabel3, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(stepsTimeLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stepsTimeLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(timeIntervalLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalLabel.text")); // NOI18N

        numOfEpochsTextField3.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsTextField3.text")); // NOI18N

        stepsTimeTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stepsTimeTextField2.text")); // NOI18N

        timeIntervalTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel3, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel3.text")); // NOI18N

        batchSizeTextField3.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField3.text")); // NOI18N

        javax.swing.GroupLayout stdpAlgorithmPanelLayout = new javax.swing.GroupLayout(stdpAlgorithmPanel);
        stdpAlgorithmPanel.setLayout(stdpAlgorithmPanelLayout);
        stdpAlgorithmPanelLayout.setHorizontalGroup(
            stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stdpAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(batchSizeLabel3)
                    .addComponent(numOfEpochsLabel3))
                .addGap(9, 9, 9)
                .addGroup(stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(batchSizeTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(numOfEpochsTextField3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stdpAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(timeIntervalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(timeIntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(stdpAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(stepsTimeLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stepsTimeTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        stdpAlgorithmPanelLayout.setVerticalGroup(
            stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stdpAlgorithmPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batchSizeLabel3)
                    .addComponent(batchSizeTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepsTimeLabel2)
                    .addComponent(stepsTimeTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(stdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfEpochsLabel3)
                    .addComponent(numOfEpochsTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIntervalLabel)
                    .addComponent(timeIntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        bpStdpAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.bpStdpAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfClassesLabel4, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel4, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfEpochsLabel4, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(timeIntervalLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(hiddenNeuronLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.hiddenNeuronLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(betaLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.betaLabel.text")); // NOI18N

        numOfClassesTextField4.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesTextField4.text")); // NOI18N

        batchSizeTextField4.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField4.text")); // NOI18N

        numOfEpochsTextField4.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsTextField4.text")); // NOI18N

        timeIntervalTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalTextField2.text")); // NOI18N
        timeIntervalTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeIntervalTextField2ActionPerformed(evt);
            }
        });

        hiddenNeuronTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.hiddenNeuronTextField.text")); // NOI18N

        betaTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.betaTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(epsilonLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.epsilonLabel.text")); // NOI18N

        epsilonTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.epsilonTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(learningRateLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateLabel2.text")); // NOI18N

        learningRateTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateTextField2.text")); // NOI18N

        javax.swing.GroupLayout bpStdpAlgorithmPanelLayout = new javax.swing.GroupLayout(bpStdpAlgorithmPanel);
        bpStdpAlgorithmPanel.setLayout(bpStdpAlgorithmPanelLayout);
        bpStdpAlgorithmPanelLayout.setHorizontalGroup(
            bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpStdpAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numOfClassesLabel4)
                            .addComponent(numOfEpochsLabel4))
                        .addComponent(hiddenNeuronLabel))
                    .addComponent(epsilonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hiddenNeuronTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(numOfEpochsTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfClassesTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(epsilonTextField))
                .addGap(18, 18, 18)
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bpStdpAlgorithmPanelLayout.createSequentialGroup()
                        .addComponent(learningRateLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(learningRateTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpStdpAlgorithmPanelLayout.createSequentialGroup()
                        .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(batchSizeLabel4)
                            .addComponent(timeIntervalLabel2)
                            .addComponent(betaLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(batchSizeTextField4)
                            .addComponent(timeIntervalTextField2)
                            .addComponent(betaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))))
                .addContainerGap())
        );
        bpStdpAlgorithmPanelLayout.setVerticalGroup(
            bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpStdpAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfClassesLabel4)
                    .addComponent(numOfClassesTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeLabel4))
                .addGap(18, 18, 18)
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfEpochsLabel4)
                    .addComponent(numOfEpochsTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIntervalTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIntervalLabel2))
                .addGap(18, 18, 18)
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(betaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hiddenNeuronLabel)
                        .addComponent(hiddenNeuronTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(betaLabel)))
                .addGap(18, 18, 18)
                .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(learningRateTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bpStdpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(epsilonLabel)
                        .addComponent(epsilonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(learningRateLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stbpAlgorithmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.stbpAlgorithmPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfClassesLabel2, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(batchSizeLabel5, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfEpochsLabel5, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel5.text")); // NOI18N
        numOfEpochsLabel5.setToolTipText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsLabel5.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(timeIntervalLabel3, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numOfWorkersLabel, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfWorkersLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(learningRateLabel3, org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateLabel3.text")); // NOI18N

        numOfClassesTextField2.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfClassesTextField2.text")); // NOI18N

        batchSizeTextField5.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.batchSizeTextField5.text")); // NOI18N

        numOfEpochsTextField5.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfEpochsTextField5.text")); // NOI18N

        timeIntervalTextField3.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.timeIntervalTextField3.text")); // NOI18N
        timeIntervalTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeIntervalTextField3ActionPerformed(evt);
            }
        });

        numOfWorkersTextField.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.numOfWorkersTextField.text")); // NOI18N

        learningRateTextField3.setText(org.openide.util.NbBundle.getMessage(N3MLAlgorithmDialog.class, "N3MLAlgorithmDialog.learningRateTextField3.text")); // NOI18N

        javax.swing.GroupLayout stbpAlgorithmPanelLayout = new javax.swing.GroupLayout(stbpAlgorithmPanel);
        stbpAlgorithmPanel.setLayout(stbpAlgorithmPanelLayout);
        stbpAlgorithmPanelLayout.setHorizontalGroup(
            stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stbpAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfWorkersLabel)
                    .addComponent(numOfClassesLabel2)
                    .addComponent(numOfEpochsLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(numOfWorkersTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(numOfEpochsTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfClassesTextField2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeIntervalLabel3)
                    .addComponent(batchSizeLabel5)
                    .addComponent(learningRateLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(batchSizeTextField5)
                    .addComponent(timeIntervalTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(learningRateTextField3))
                .addContainerGap())
        );
        stbpAlgorithmPanelLayout.setVerticalGroup(
            stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stbpAlgorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfClassesLabel2)
                    .addComponent(numOfClassesTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchSizeLabel5))
                .addGap(24, 24, 24)
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfEpochsLabel5)
                    .addComponent(numOfEpochsTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIntervalTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIntervalLabel3))
                .addGap(24, 24, 24)
                .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(learningRateLabel3)
                        .addComponent(learningRateTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(stbpAlgorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numOfWorkersLabel)
                        .addComponent(numOfWorkersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(generateButton)
                        .addGap(57, 57, 57)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(softLIFAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algorithmInfoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadDataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resumeAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(softLIFNeuronModelPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spikePropAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stdpAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bpStdpAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stbpAlgorithmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(algorithmInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resumeAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(softLIFAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spikePropAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stdpAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bpStdpAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stbpAlgorithmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(softLIFNeuronModelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataDirBrowseButtonActionPerformed
        // TODO add your handling code here:
        evt.setSource(dataDirBrowseButton);
        selectDirectory(evt);

    }//GEN-LAST:event_dataDirBrowseButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void stepsTimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepsTimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stepsTimeTextFieldActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        initIOConf();
        if((hN3mlAlgorithm==H_N3ML_A_softLIF) && (!dataDirTextField.getText().equals("This is your pretrained data directory."))){
            loadLib(); 
            //loadDir = modelFileTextField.getText();
            copyLib(libDir, destLib);
        }
        System.exit(0);
    }//GEN-LAST:event_generateButtonActionPerformed

    private void dtTimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtTimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dtTimeTextFieldActionPerformed

    private void timeIntervalTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeIntervalTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeIntervalTextField2ActionPerformed

    private void timeIntervalTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeIntervalTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeIntervalTextField3ActionPerformed

    
    private void myInitComponents() {
        srcDir = new File(hDirectory + File.separatorChar);   
        
        blindPanel();

        hN3mlGen.setModelAlgorithm(hN3mlNeuronModel, hN3mlAlgorithm);
        String printAlgorithm = "";

        switch (hN3mlAlgorithm) {
            case H_N3ML_A_softLIF:
                printAlgorithm = "SoftLIF";
                if (hDataSetOpt == H_DATA_SET_TRAINING) {
                    softLIFAlgorithmPanel.setVisible(true);
                    logPanel1.setVisible(false);
                } else {
                    softLIFAlgorithmPanel.setVisible(false);
                    logPanel1.setVisible(true);
                }
                loadDataPanel.setVisible(true);
                softLIFNeuronModelPanel.setVisible(true);
                break;
            case H_N3ML_A_SpikeProp:
                printAlgorithm = "SpikeProp";
                spikePropAlgorithmPanel.setVisible(true);
                break;
            case H_N3ML_A_STDP:
                printAlgorithm = "STDP";
                stdpAlgorithmPanel.setVisible(true);
                break;
            case H_N3ML_A_BP_STDP:
                printAlgorithm = "BP-STDP";
                bpStdpAlgorithmPanel.setVisible(true);
                break;
            case H_N3ML_A_STBP:
                printAlgorithm = "STBP";
                stbpAlgorithmPanel.setVisible(true);
                
                break;
        }

        printAlgorithmLabel.setText(printAlgorithm);

        //loadDataPanel.setVisible(false);
    }
    
    private void blindPanel(){
        resumeAlgorithmPanel.setVisible(false);
        softLIFAlgorithmPanel.setVisible(false);
        softLIFNeuronModelPanel.setVisible(false);
        loadDataPanel.setVisible(false);
        spikePropAlgorithmPanel.setVisible(false);
        stdpAlgorithmPanel.setVisible(false);
        bpStdpAlgorithmPanel.setVisible(false);
        stbpAlgorithmPanel.setVisible(false);
    }
    
    private void initIOConf(){
        hN3mlIOConf.setData_opt(hDataSetOpt);
        switch(hN3mlAlgorithm){
            case H_N3ML_A_softLIF:
                hN3mlIOConf.setEpoch(Integer.parseInt(numOfEpochsTextField.getText()));
                hN3mlIOConf.setMomentum(Double.parseDouble(momentumTextField.getText()));
                hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField1.getText()));
                hN3mlIOConf.setLearning_rate(learningRateTextField1.getText());
                hN3mlIOConf.setNumofClasses(Integer.parseInt(numOfClassesTextField1.getText()));
                hN3mlIOConf.setAmplitude(Double.parseDouble(amplitudeTextField.getText()));
                hN3mlIOConf.setTauRef(Double.parseDouble(tauRefTextField.getText()));
                hN3mlIOConf.setTau_rc(Double.parseDouble(tauRCTextField.getText()));
                hN3mlIOConf.setGain(Double.parseDouble(gainTextField.getText()));
                hN3mlIOConf.setSigma(Double.parseDouble(sigmaTextField.getText())); 
                break;
            case H_N3ML_A_SpikeProp:
                hN3mlIOConf.setNumofClasses(Integer.parseInt(numOfClassesTextField3.getText()));
                hN3mlIOConf.setEpoch(Integer.parseInt(numOfEpochsTextField2.getText()));
                hN3mlIOConf.setNumofSteps(Integer.parseInt(numOfStepsTextField.getText()));
                hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField2.getText()));
                hN3mlIOConf.setDtTime(Integer.parseInt(dtTimeTextField.getText()));
                hN3mlIOConf.setMaxFiringTime(Integer.parseInt(maxFiringTimeTextField.getText()));
                hN3mlIOConf.setNotToFire(Integer.parseInt(notFiringTextField.getText()));
                break;
            case H_N3ML_A_STDP:
                hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField3.getText()));
                hN3mlIOConf.setTimeStepsMs(Integer.parseInt(stepsTimeTextField2.getText()));
                hN3mlIOConf.setEpoch(Integer.parseInt(numOfEpochsTextField3.getText()));
                hN3mlIOConf.setIntervalTime(Integer.parseInt(timeIntervalTextField.getText()));
                break;
            case H_N3ML_A_BP_STDP:
                hN3mlIOConf.setNumofClasses(Integer.parseInt(numOfClassesTextField4.getText()));
                hN3mlIOConf.setEpoch(Integer.parseInt(numOfEpochsTextField4.getText()));
                hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField4.getText()));
                hN3mlIOConf.setIntervalTime(Integer.parseInt(timeIntervalTextField2.getText()));
                hN3mlIOConf.setHiddenNeuron(Integer.parseInt(hiddenNeuronTextField.getText()));
                hN3mlIOConf.setBeta(Integer.parseInt(betaTextField.getText()));
                hN3mlIOConf.setEpsilon(Integer.parseInt(epsilonTextField.getText()));
                hN3mlIOConf.setLearning_rate(learningRateTextField2.getText());
                break;
            case H_N3ML_A_STBP:
                hN3mlIOConf.setNumofClasses(Integer.parseInt(numOfClassesTextField2.getText()));
                hN3mlIOConf.setEpoch(Integer.parseInt(numOfEpochsTextField5.getText()));
                hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField5.getText()));
                hN3mlIOConf.setIntervalTime(Integer.parseInt(timeIntervalTextField3.getText()));
                hN3mlIOConf.setWorkers(Integer.parseInt(numOfWorkersTextField.getText()));
                hN3mlIOConf.setLearning_rate(learningRateTextField3.getText());
                break; 
        }
//        hN3mlIOConf.setNumofClasses(Integer.parseInt(numOfClassesTextField.getText())); /*-----ReSuMe 삭제----------*/
//        hN3mlIOConf.setBatch_size(Integer.parseInt(batchSizeTextField.getText()));
//        hN3mlIOConf.setSimulationTime(Integer.parseInt(simTimesTextField.getText()));
//        hN3mlIOConf.setTimeSteps(Double.parseDouble(stepsTimeTextField.getText()));
//        hN3mlIOConf.setTimeFrames(Double.parseDouble(frameTimeTextField.getText()));
//        hN3mlIOConf.setLearning_rate(Double.parseDouble(learningRateTextField.getText()));
        
        generateSNNN3MLSource();
        cancel();
    }
    
    private void generateSNNN3MLSource(){
        //hSNNN3mlGen = new HSNNN3MLGenerator(hN3mlIOConf, );
        hN3mlGen.hSTATE = H_SNN;
        hN3mlGen.createFile(hN3mlGen.modelDir);
        hN3mlGen.inputN3MLIO(hN3mlIOConf);
        hN3mlGen.writeN3MLGen();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(N3MLAlgorithmDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(N3MLAlgorithmDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(N3MLAlgorithmDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(N3MLAlgorithmDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                N3MLAlgorithmDialog dialog = new N3MLAlgorithmDialog(new javax.swing.JFrame(), true);
                  dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    @Action
    public void cancel() {
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algorithmInfoPanel;
    private javax.swing.JLabel amplitudeLabel;
    private javax.swing.JTextField amplitudeTextField;
    private javax.swing.JLabel batchSizeLabel;
    private javax.swing.JLabel batchSizeLabel1;
    private javax.swing.JLabel batchSizeLabel2;
    private javax.swing.JLabel batchSizeLabel3;
    private javax.swing.JLabel batchSizeLabel4;
    private javax.swing.JLabel batchSizeLabel5;
    private javax.swing.JTextField batchSizeTextField;
    private javax.swing.JTextField batchSizeTextField1;
    private javax.swing.JTextField batchSizeTextField2;
    private javax.swing.JTextField batchSizeTextField3;
    private javax.swing.JTextField batchSizeTextField4;
    private javax.swing.JTextField batchSizeTextField5;
    private javax.swing.JLabel betaLabel;
    private javax.swing.JTextField betaTextField;
    private javax.swing.JPanel bpStdpAlgorithmPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel currentAlgorithmLabel;
    private javax.swing.JButton dataDirBrowseButton;
    private javax.swing.JLabel dataDirLabel;
    private javax.swing.JTextField dataDirTextField;
    private javax.swing.JLabel dtTimeLabel;
    private javax.swing.JTextField dtTimeTextField;
    private javax.swing.JLabel epsilonLabel;
    private javax.swing.JTextField epsilonTextField;
    private javax.swing.JLabel frameTimeLabel;
    private javax.swing.JTextField frameTimeTextField;
    private javax.swing.JLabel gainLabel;
    private javax.swing.JTextField gainTextField;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel hiddenNeuronLabel;
    private javax.swing.JTextField hiddenNeuronTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel learningRateLabel;
    private javax.swing.JLabel learningRateLabel1;
    private javax.swing.JLabel learningRateLabel2;
    private javax.swing.JLabel learningRateLabel3;
    private javax.swing.JTextField learningRateTextField;
    private javax.swing.JTextField learningRateTextField1;
    private javax.swing.JTextField learningRateTextField2;
    private javax.swing.JTextField learningRateTextField3;
    private javax.swing.JPanel loadDataPanel;
    private javax.swing.JPanel logPanel1;
    private javax.swing.JLabel maxFiringTimeLabel;
    private javax.swing.JTextField maxFiringTimeTextField;
    private javax.swing.JLabel momentumLabel;
    private javax.swing.JTextField momentumTextField;
    private javax.swing.JLabel notFiringLabel;
    private javax.swing.JTextField notFiringTextField;
    private javax.swing.JLabel numOfClassesLabel;
    private javax.swing.JLabel numOfClassesLabel1;
    private javax.swing.JLabel numOfClassesLabel2;
    private javax.swing.JLabel numOfClassesLabel3;
    private javax.swing.JLabel numOfClassesLabel4;
    private javax.swing.JTextField numOfClassesTextField;
    private javax.swing.JTextField numOfClassesTextField1;
    private javax.swing.JTextField numOfClassesTextField2;
    private javax.swing.JTextField numOfClassesTextField3;
    private javax.swing.JTextField numOfClassesTextField4;
    private javax.swing.JLabel numOfEpochsLabel;
    private javax.swing.JLabel numOfEpochsLabel2;
    private javax.swing.JLabel numOfEpochsLabel3;
    private javax.swing.JLabel numOfEpochsLabel4;
    private javax.swing.JLabel numOfEpochsLabel5;
    private javax.swing.JTextField numOfEpochsTextField;
    private javax.swing.JTextField numOfEpochsTextField2;
    private javax.swing.JTextField numOfEpochsTextField3;
    private javax.swing.JTextField numOfEpochsTextField4;
    private javax.swing.JTextField numOfEpochsTextField5;
    private javax.swing.JLabel numOfStepsLabel;
    private javax.swing.JTextField numOfStepsTextField;
    private javax.swing.JLabel numOfWorkersLabel;
    private javax.swing.JTextField numOfWorkersTextField;
    private javax.swing.JLabel printAlgorithmLabel;
    private javax.swing.JPanel resumeAlgorithmPanel;
    private javax.swing.JLabel sigmaLabel;
    private javax.swing.JTextField sigmaTextField;
    private javax.swing.JLabel simTimesLabel;
    private javax.swing.JTextField simTimesTextField;
    private javax.swing.JPanel softLIFAlgorithmPanel;
    private javax.swing.JPanel softLIFNeuronModelPanel;
    private javax.swing.JPanel spikePropAlgorithmPanel;
    private javax.swing.JPanel stbpAlgorithmPanel;
    private javax.swing.JPanel stdpAlgorithmPanel;
    private javax.swing.JLabel stepsTimeLabel;
    private javax.swing.JLabel stepsTimeLabel2;
    private javax.swing.JTextField stepsTimeTextField;
    private javax.swing.JTextField stepsTimeTextField2;
    private javax.swing.JLabel tauRCLabel;
    private javax.swing.JTextField tauRCTextField;
    private javax.swing.JLabel tauRefLabel;
    private javax.swing.JTextField tauRefTextField;
    private javax.swing.JLabel timeIntervalLabel;
    private javax.swing.JLabel timeIntervalLabel2;
    private javax.swing.JLabel timeIntervalLabel3;
    private javax.swing.JTextField timeIntervalTextField;
    private javax.swing.JTextField timeIntervalTextField2;
    private javax.swing.JTextField timeIntervalTextField3;
    private javax.swing.JTextArea varificationLogTextArea1;
    // End of variables declaration//GEN-END:variables

    private void loadLib() {
        LOADLIB = true;
        
        libDir = new File(dataDirTextField.getText());
        destLib = new File(srcDir.getAbsolutePath() + File.separatorChar + "src" +File.separatorChar + "hnu" +File.separatorChar +libDir.getName());
        System.out.println("***********libDir**********"+libDir);
        System.out.println("***********srcDir**********"+srcDir);
        System.out.println("***********destLib**********"+destLib);
        destLib.mkdirs();
    }
    
    public void copyLib(File libDir, File destLib){

        File[] childrenList = libDir.listFiles();
        
        for(File file : childrenList){
            File temp = new File(destLib.getAbsolutePath() + File.separatorChar + file.getName());
            
            FileInputStream fis = null ;
            FileOutputStream fos = null;
                    
            if(file.isDirectory()){
                temp.mkdirs();
                copyLib(file, temp);
            }else {
                try {
                    fis = new FileInputStream(file);
                    fos = new FileOutputStream(temp);
                    
                    byte[] b = new byte[4096];
                    int count = 0;
                    
                    while((count = fis.read(b)) != -1) {
                        fos.write(b , 0 , count);
                    }
                    
                }catch(Exception e) {
                    e.printStackTrace();
                }finally {
                    try {
                        fis.close();
                        fos.close();
                    }catch(Exception e) {}
                }
            }
        }
        
    }
    public void selectDirectory(java.awt.event.ActionEvent evt) {
        String title="Select Data Location";
        String path = "";
        
        
        FileUtil.preventFileChooserSymlinkTraversal(fileChooser, null);
        fileChooser.setDialogTitle(title);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        path = dataDirTextField.getText();
        
        if (path.length() > 0) {
            File f = new File(path);
            if (f.exists()) {
                fileChooser.setSelectedFile(f);
            }
        }
        if (JFileChooser.APPROVE_OPTION == fileChooser.showOpenDialog(this)) {
            File projectDir = fileChooser.getSelectedFile();
            //System.out.println("N3ML DataDir : "+projectDir);
            
            dataDirTextField.setText(FileUtil.normalizeFile(projectDir).getAbsolutePath());
         
        }
    }
}
